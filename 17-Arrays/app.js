// ## Task 1 üéØ

// ### ∆èd…ôdin birinci v…ô sonuncu r…ôq…ôml…ôrinin c…ômi
// Tam …ôd…ôdin birinci v…ô sonuncu r…ôq…ôml…ôrinin c…ômini tapƒ±n.

// ### Input
// ∆èn azƒ± 2 r…ôq…ômi olan 32 m…ôrt…ôb…ôli tam …ôd…ôd verilir. ∆èd…ôd m√ºsb…ôt v…ô ya m…ônfi ola bil…ôr.


// ### Output
// Yegan…ô …ôd…ôd - m…ôs…ôl…ônin h…ôlli.

// #### Input example

//     2345

// #### Output example

//     7
   
// ------------------------------------------------------------------------------------------------------------------------------------

//~~~~~~~~~~~~~~~~~~~~~~~Stringe cevirmekle 1ci usul~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// let  number=23459974;
// let sum=0;
// let str=number.toString();
// for (let i = 0; i < str.length; i++) {
//     if (i==0 || i==str.length-1) {
//         sum+=Number(str[i])   
//     }
// }
// console.log(sum);


//~~~~~~~~~~~~~~Stringe cevirmeden 2ci usul~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// let  number=98923459974;
// let count=0;
// let lastNumber=number%10;
// while (number>=10) {
//     count+=1;
//     number=parseInt(number/10)
// }
// let firstNumber=parseInt(number/(10**count))
// console.log(firstNumber+lastNumber);

// ------------------------------------------------------------------------------------------------------------------------------------




// ### Task 2 üéØ
// ∆èd…ôdd…ôki c√ºt v…ô t…ôk yerd…ô olan r…ôq…ôml…ôri ayrƒ±lƒ±qda c…ôml…ôyirik. Bu c…ôml…ôrin hasilini tapƒ±n.


// #### Input
// n (10 ‚â§ n ‚â§ 2 * 10**9) natural …ôd…ôdi.

// #### Output
// T…ôk v…ô c√ºt yerd…ô olan r…ôq…ôml…ôrin c…ôml…ôrinin hasilini verin.

// ##### Input example 1

//     27 --> 2*7 = 14

// #### Output example 1

//     14
   
// #### Input example 2

//     2821 --> (2+2) * (8*1) = 36

// #### Output example 2

//     36

// #### Input example 3

//     10001

// #### Output example 3

//     0

// -------------------------------------------------------------------------------------------------------------------------------

// let number=2345680102;
// let onlySum=0;
// let coupleSum=0;
// let strNumber=number.toString();
// for (let i = 0; i < strNumber.length; i++) {
//     if (i%2==0) {
//         coupleSum+=Number(strNumber[i])
//     }
//     else{
//         onlySum+=Number(strNumber[i]);
//     }    
// }
// console.log(`Multiple ${coupleSum*onlySum}`);

// -------------------------------------------------------------------------------------------------------------------------------

// ## Task 3 üéØ

// ### 2 vahid artƒ±rma
// Tam …ôd…ôdl…ôr ardƒ±cƒ±llƒ±ƒüƒ± verilir. Ardƒ±cƒ±llƒ±ƒüƒ±n h…ôr bir m…ônfi olmayan elementini 2 vahid artƒ±rmalƒ±.

// #### Input
// Birinci s…ôtird…ô ardƒ±cƒ±llƒ±ƒüƒ±n elementl…ôrinin sayƒ±nƒ± ifad…ô ed…ôn n (n ‚â§ 100) natural …ôd…ôdi verilir. ƒ∞kinci s…ôtird…ô bo≈üluqla ayrƒ±lmƒ±≈ü, qiym…ôti modulca 100-d…ôn b√∂y√ºk olmayan ardƒ±cƒ±llƒ±ƒüƒ±n elementl…ôri verilir.

// #### Output
// T…ôk s…ôtird…ô ardƒ±cƒ±llƒ±ƒüƒ±n n sayda yeni qiym…ôtl…ôrini eyni ardƒ±cƒ±llƒ±qla bo≈üluqla ayrƒ±lmƒ±≈ü ≈ü…ôkild…ô verm…ôli.

// #### Input example

//     4
   
//     1 2 3 -4
// #### Output example

//     3 4 5 -4

// -------------------------------------------------------------------------------------------------------------------------------

// let numbers=[1,2,3,-4];
// for (let i = 0; i < numbers.length; i++) {
//     if (numbers[i]>0) {
//         numbers[i]+=2
//     }
// }
// console.log(numbers);
// -------------------------------------------------------------------------------------------------------------------------------


// ## Task 4 üéØ

// ### ƒ∞ki …ôn b√∂y√ºk
// n sayda tam …ôd…ôdl…ôrd…ôn ibar…ôt massiv verilir. Massivin iki …ôn b√∂y√ºk elementinin c…ômini tapƒ±n.

// ### Input
// Birinci s…ôtird…ô n natural …ôd…ôdi verilir (n ‚â§ 100). N√∂vb…ôti s…ôtird…ô modulca 100-d…ôn b√∂y√ºk olmayan n sayda tam …ôd…ôd verilir.


// ### Output
// Massivin iki …ôn b√∂y√ºk elementinin c…ômini √ßap edin.


// #### Input example

//     5
   
//     1 5 2 6 3

// #### Output example

//     11

// -------------------------------------------------------------------------------------------------------------------------------
// let numbers=[2,9,8,5,3,2]
// let maxOne=numbers[0];
// let maxTwo=numbers[0]
// for (let i = 0; i < numbers.length; i++) {
//     if (numbers[i]>maxOne) {
//         maxTwo=maxOne;
//         maxOne=numbers[i]
//     }    
//     else if(numbers[i]>maxTwo && numbers[i]!==maxOne){
//         maxTwo=numbers[i]
//     }
// }
// console.log(maxOne+maxTwo);
// -------------------------------------------------------------------------------------------------------------------------------



// ## Task 5 üéØ

// ### ∆èn b√∂y√ºk v…ô …ôn ki√ßikl…ôrind…ôn ba≈üqa
// N sayda tam …ôd…ôdl…ôrd…ôn ibar…ôt massiv verilir. Bu massivin …ôn ki√ßik v…ô …ôn b√∂y√ºk elementl…ôrind…ôn ba≈üqa b√ºt√ºn elementl…ôrinin c…ômini tapƒ±n.

// ### Input
// Birinci s…ôtird…ô N natural …ôd…ôdi verilir. N√∂vb…ôti s…ôtird…ô N sayda modulca 100-d…ôn b√∂y√ºk olmayan tam …ôd…ôdl…ôr verilir.

// ### Output
// M…ôs…ôl…ônin cavabƒ±.


// #### Input example
   
//     6 2 7 1 7 1 2

// #### Output example

//     10
   
//-------------------------------------------------------------------------------------------------------------------------------
// let numbers=[0,1,2,3,4,5,6];
// let min=numbers[0];
// let max=numbers[0];
// let sum=0;
// for (let i = 0; i < numbers.length; i++) {
//     if (numbers[i]>max) {
//         max=numbers[i]
//     } 
//     if (numbers[i]<min) {
//         min=numbers[i]
//     }   
// }
// for (let i = 0; i < numbers.length; i++) {
//     if (numbers[i]==min || numbers[i]==max) {
//         continue;
//     }    
//     sum+=numbers[i]
// }
// console.log(sum);
//-------------------------------------------------------------------------------------------------------------------------------
